plugins {
    id 'java'
    id 'jacoco'
    id 'java-library'
}

group 'com.surrealdb'
version '0.2-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

sourceSets {
    integrationTest {
        java
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    implementation 'org.scijava:native-lib-loader:2.5.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    integrationTestImplementation files('build/libs/surrealdb-jni-0.2-SNAPSHOT.jar')
}

jacoco {
    toolVersion = "0.8.12"
}

test {
    useJUnitPlatform()
    systemProperty 'java.library.path', file('target/debug').absolutePath
    testLogging {
        events "passed"
    }
}

jacocoTestReport {
    dependsOn test
//    finalizedBy jacocoTestCoverageVerification
}

//jacocoTestCoverageVerification {
//    violationRules {
//        rule {
//            limit {
//                minimum = 0.7
//            }
//        }
//    }
//}

javadoc {
    destinationDir = file("build/reports/javadoc")
}

tasks.register('createCombinedReport') {
    dependsOn jacocoTestReport
    dependsOn javadoc

    doLast {
        def indexFile = file("build/reports/index.html")
        indexFile.text = """
            <!DOCTYPE html>
            <html>
            <head>
                <title>Combined Test, Coverage, and Javadoc Report</title>
            </head>
            <body>
                <h1>Combined Test, Coverage, and Javadoc Report</h1>
                <ul>
                    <li><a href="./tests/test/index.html">Test Report</a></li>
                    <li><a href="./jacoco/test/html/index.html">JaCoCo Coverage Report</a></li>
                    <li><a href="./javadoc/index.html">Javadoc</a></li>
                </ul>
            </body>
            </html>
        """
    }
}

tasks.register('integrationTest', Test) {
    useJUnitPlatform()
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    systemProperty 'org.slf4j.simpleLogger.defaultLogLevel', 'debug'
    testLogging {
        showStandardStreams = true
    }
}